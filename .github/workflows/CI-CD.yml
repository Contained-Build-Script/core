name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - edited
      - synchronize
      - reopened
    branches:
      - main
  pull_request_target:
    types: 
      - closed
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Run build script

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm
      - name: Download all dependencies
        run: npm ci
      - name: Build the project
        run: npm run build

  test:
    name: Run Gherkin tests

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm
      - name: Download all dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Uploading the test page artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: './pages/test-results/index.html'
          retention-days: 1
          
  generate-pages:
    name: Upload pages
    if: always() && (github.event_name != 'pull_request' || github.event.pull_request.merged == true)

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm
      - name: Download all dependencies
        run: npm ci
      - name: Build the pages
        run: npm run pages
      - name: Uploading the pages artifact
        uses: actions/upload-artifact@v3
        with:
          name: pages
          path: './pages/**'
          retention-days: 1

  pages:
    name: Deploy GitHub Pages
    if: always() && (github.event_name != 'pull_request' || github.event.pull_request.merged == true)

    needs:
      - test
      - generate-pages

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download all page artifacts
        uses: actions/download-artifact@v3
        with:
          path: './pages'
      - name: Move the pages to root
        run: |
          if [ -d "./pages/pages" ]; then
            cp -r ./pages/pages/* ./pages;
            rm -rf ./pages/pages/;
          fi
      - name: Show all files
        run: ls -R
        working-directory: './pages'
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
